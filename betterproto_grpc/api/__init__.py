# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: betterproto_grpc/proto/stats.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import (
    TYPE_CHECKING,
    Dict,
    List,
    Optional,
)

import betterproto
import grpclib
from betterproto.grpc.grpclib_server import ServiceBase


if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


@dataclass(eq=False, repr=False)
class SearchReq(betterproto.Message):
    search: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class GetStatsResp(betterproto.Message):
    stats_entities: List["StatsEntity"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class StatsEntity(betterproto.Message):
    id: int = betterproto.int64_field(1)
    username: str = betterproto.string_field(2)
    first_name: str = betterproto.string_field(3)
    last_name: str = betterproto.string_field(4)
    cock_size: int = betterproto.int32_field(5)


class StatsStub(betterproto.ServiceStub):
    async def get(
        self,
        search_req: "SearchReq",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "GetStatsResp":
        return await self._unary_unary(
            "/api.Stats/Get",
            search_req,
            GetStatsResp,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


class StatsBase(ServiceBase):
    async def get(self, search_req: "SearchReq") -> "GetStatsResp":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_get(
        self, stream: "grpclib.server.Stream[SearchReq, GetStatsResp]"
    ) -> None:
        request = await stream.recv_message()
        response = await self.get(request)
        await stream.send_message(response)

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/api.Stats/Get": grpclib.const.Handler(
                self.__rpc_get,
                grpclib.const.Cardinality.UNARY_UNARY,
                SearchReq,
                GetStatsResp,
            ),
        }
